AppError Class
class AppError extends Error {
    constructor(
        msg: string;
        public statusCode: number;
        public error: string
    ) {
        super(msg);
        this.statusCode = statusCode;
        this.error = error;
        Object.setPrototypeOf(this, AppError.prototype);
    }
}

export default AppError

Global Error Handler Function
function globalErrorHandler(
    err: Error | AppError,
    req: Request,
    res: Response,
    next: NextFunction
) {
    const status: number = (err as AppError).statusCode || 500;
    const msg: number = (err as AppError).msg || 500;
    const error: number = (err as AppError).error || 500;
    res.status(status).json({status, msg, error});
}

export default globalErrorHandler

Then use in project
const app = express()

app.use("*", (req: Request, _res: Response, next: NextFunction) => {
  next(
    new AppError(
      `Can't find ${req.originalUrl} on this server!`,
      400,
      'Not Found'
    )
  );
});

app.use(globalErrorHandler());